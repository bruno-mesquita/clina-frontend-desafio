import { useState } from 'react';
import type { NextPage, GetServerSideProps } from 'next';
import Head from 'next/head';
import { Text, Flex, FormControl, Select, FormLabel } from '@chakra-ui/react';
import { HiOutlineLocationMarker } from 'react-icons/hi';
import nookies from 'nookies';

import { Header, Card } from '@components';
import api from '@services/api';

const Home: NextPage = () => {
  const [period, setPeriod] = useState('Todos');
  const [startDate, setStartDate] = useState('');

  const [items] = useState([
    {
      id: 1,
      name: 'Nome do consultório - Sala 01',
      address: 'Em Bela Vista, SP',
      image: '/exemplo-sala.jpg',
    },
    {
      id: 2,
      name: 'Nome do consultório - Sala 02',
      address: 'Em Bela Vista, SP',
      image: '/exemplo-sala.jpg',
    },
    {
      id: 3,
      name: 'Nome do consultório - Sala 03',
      address: 'Em Bela Vista, SP',
      image: '/exemplo-sala.jpg',
    },
  ]);

  return (
    <>
      <Head>
        <title>Clina Care</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Flex
        pb="40px"
        bg="#FAFAFA"
        flexDir="column"
        px={['20px', '20px', '50px', '80px']}
      >
        <Text fontWeight={600} fontSize="22px">
          Nossas salas disponíveis agora.
        </Text>
        <Flex align="center" mb="20px">
          <HiOutlineLocationMarker size={20} color="#7A35FF" />
          <Text ml="10px">
            Todas as nossas salas localizadas em São Paulo, Bela Vista, rua
            Itapeva, 490 Sala 68 - CEP: 01332-000.
          </Text>
        </Flex>
        <Flex w={['xl', 'md']} justify="space-between">
          <FormControl w="45%">
            <FormLabel color="#4F4F4F" fontWeight={600}>
              Preciso para quais dias?
            </FormLabel>
            <Select
              rounded="3px"
              variant="outline"
              value={startDate}
              onChange={({ target }) => setStartDate(target.value)}
            >
              <option value="2022/02/08">2022/02/08</option>
              <option value="2022/02/09">2022/02/09</option>
              <option value="2022/02/10">2022/02/10</option>
              <option value="2022/02/11">2022/02/11</option>
              <option value="2022/02/12">2022/02/12</option>
            </Select>
          </FormControl>
          <FormControl w="40%">
            <FormLabel color="#4F4F4F" fontWeight={600}>
              Período do dia
            </FormLabel>
            <Select
              rounded="3px"
              variant="outline"
              value={period}
              onChange={({ target }) => setPeriod(target.value)}
            >
              <option value="Manhã">Manhã</option>
              <option value="Tarde">Tarde</option>
              <option value="Noite">Noite</option>
              <option value="Todos">Todos</option>
            </Select>
          </FormControl>
        </Flex>
        <Flex flexDir="column" mt="50px">
          {items.map((item) => (
            <Card key={item.id} {...item} />
          ))}
        </Flex>
      </Flex>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  // Parse
  const cookies = nookies.get(ctx);

  if (cookies.token) {
    api.defaults.headers.common.Authorization = cookies.token;

    return {
      props: {},
    };
  }

  return {
    redirect: {
      destination: '/auth',
      permanent: true,
    },
  };
};

export default Home;
